version: 2
jobs:

  # Run tests and linting for Synse Server
  test:
    working_directory: ~/synse-server
    docker:
      - image: circleci/python:3.6.4
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: |
            sudo chown -R circleci:circleci /usr/local/bin
            sudo chown -R circleci:circleci /usr/local/lib/python3.6/site-packages
            pip install tox>=2.9.0 codecov>=1.4.0
      - restore_cache:
          keys:
            - v1.5-tox-test-cache-{{ checksum "requirements.txt" }}-{{ checksum "tox.ini" }}
      - run:
          name: Unit Tests
          command: make test-unit
      - run:
          name: Unit Test Coverage
          command: codecov
      - run:
          name: Integration Tests
          command: make test-integration
      - save_cache:
          key: v1.5-tox-test-cache-{{ checksum "requirements.txt" }}-{{ checksum "tox.ini" }}
          paths:
            - .tox/py36
      - restore_cache:
          keys:
            - v2.6-tox-lint-cache-{{ checksum "requirements.txt" }}-{{ checksum "tox.ini" }}
      - run:
          name: Lint
          command: make lint
      - save_cache:
          key: v2.6-tox-lint-cache-{{ checksum "requirements.txt" }}-{{ checksum "tox.ini" }}
          paths:
            - .tox/lint
      - store_artifacts:
          path: ./results
      - store_test_results:
          path: ./results/pytest

  # Build and push the Synse Server docker image to DockerHub
  build-push:
    working_directory: ~/synse-server
    docker:
      - image: circleci/python:3.6.4
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Images
          command: |
            make docker
      - run:
          name: Push Images
          command: |
            docker login -u ${DOCKER_USER} -p ${DOCKER_PS}
            for tag in $(make tags); do
              docker push ${tag}
            done

  # Create a new release draft when a tag is pushed
  release:
    working_directory: ~/synse-server
    docker:
      - image: circleci/golang:latest
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - checkout
      - run:
          name: Check version matches tag
          command: |
            version=$(make version)
            if [ "${version}" != "${CIRCLE_TAG}" ]; then
              echo "Version ${version} does not match Tag ${CIRCLE_TAG}"
              exit 1
            else
              echo "Versions match: ${version}"
            fi
      - run:
          name: Get GHR Distributor
          command: |
            go get -v github.com/tcnksm/ghr
      - run:
          name: Generate Changelog
          command: |
            docker pull timfallmk/github-changelog-generator
            docker run --name changelog timfallmk/github-changelog-generator \
              -u vapor-ware \
              -p synse-server \
              --since-tag $(git describe --abbrev=0 --tags `git rev-list --tags --skip=1 --max-count=1`) \
              -t ${GITHUB_TOKEN}
            docker cp changelog:/usr/local/src/your-app/CHANGELOG.md ./
      - run:
          name: Create Release
          command: |
            # ghr needs a path to artifacts specified to upload. since
            # we have none right now, we'll just create an empty directory
            mkdir build
            if git describe --exact-match --tags HEAD; then
              CIRCLE_TAG=$(git describe --exact-match --tags HEAD)
            fi
            ghr \
              -u ${GITHUB_USER} \
              -t ${GITHUB_TOKEN} \
              -b "$(cat ./CHANGELOG.md)" \
              -replace \
              -draft \
              ${CIRCLE_TAG} build/



workflows:
  version: 2
  build:
    jobs:
      - test
      - build-push:
          requires:
            - test
          filters:
            branches:
              only:
                - master
      - release:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v?[0-9]*(\.[0-9]*)*(-rc[0-9]*)?$/
