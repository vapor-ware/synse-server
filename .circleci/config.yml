version: 2
jobs:
  build:
    docker:
      - image: python
    working_directory: /synse-server-internal
    environment:
      - DOCKER_VERSION=17.05.0-ce
      - COMPOSE_VERSION=1.14.0
    steps:
      - checkout

      - setup_remote_docker

      - run:
          name: Install Docker Client
          command: |
            set -x
            curl -L -o /tmp/docker-${DOCKER_VERSION}.tgz https://get.docker.com/builds/Linux/x86_64/docker-${DOCKER_VERSION}.tgz
            tar -xz -C /tmp -f /tmp/docker-${DOCKER_VERSION}.tgz
            mv /tmp/docker/* /usr/bin
      - run:
           name: Docker Private Images (temporary) # This should be removed once images are public
           command: |
            docker login -u $DOCKER_USER -p $DOCKER_PS
#            docker pull vaporio/vapor-endpoint-base-x64:1.0
      - run:
          name: Install Docker compose
          command: |
            set -x
            curl -L https://github.com/docker/compose/releases/download/${COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
            chmod +x /usr/local/bin/docker-compose
      - run:
          name: images 1
          command: |
            docker images
            docker ps
#      - run:
#          name: Docker Compose Build
#          command: docker-compose -f compose/release.yml build
      - run:
          name: images 2
          command: |
            docker images
            docker ps
      - run:
          name: Run tests
          command: |
            echo PWD IS: $PWD
            echo finding config:
            ls -la /synse-server-internal/synse/tests/data/plc_override_config.json
            find .
            make test
      - run: # Get logs for all containers running synse.sh.
          name: synse log
          command: |
            CONTAINER_IDS=$(docker ps -a --no-trunc | grep synse.sh | cut -d' ' -f1)
            for CONTAINER in ${CONTAINER_IDS[@]}; do
              echo --- Container logs ---
              docker logs ${CONTAINER}
            done
          when: on_fail
      - run:
          name: images 3
          command: |
            docker images
            docker ps --no-trunc
          when: on_fail
